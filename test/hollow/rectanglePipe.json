{"scene":{"name":"","type":"Scene","position":[0,0,0],"rotation":[0,0,0],"scale":[1,1,1],"children":[{"uniforms":{"lightColor":["Color",[1,1,1,1]]},"color":[1,1,1,1],"target":null,"direction":[0,0,0],"type":"DirectionalLight"},{"name":"","type":"Mesh","position":[0,0,0],"rotation":[0,0,0],"scale":[1,1,1],"children":[],"geometry":{"type":"Geometry","attributes":{"texcoord":{"data":{},"size":2,"options":{"dtype":5126,"normalize":false,"stride":0,"offset":0,"isDirty":true},"type":"BufferAttribute"}},"position":{"x":0,"y":0,"z":0},"size":{"x":1,"y":1,"z":1},"vertices":"{\"0\":0,\"1\":0,\"2\":0,\"3\":100,\"4\":0,\"5\":0,\"6\":100,\"7\":150,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":100,\"13\":150,\"14\":0,\"15\":0,\"16\":150,\"17\":0,\"18\":100,\"19\":150,\"20\":-100,\"21\":100,\"22\":150,\"23\":0,\"24\":100,\"25\":0,\"26\":0,\"27\":100,\"28\":0,\"29\":-100,\"30\":100,\"31\":150,\"32\":-100,\"33\":100,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":150,\"41\":0,\"42\":0,\"43\":150,\"44\":-100,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":150,\"50\":-100,\"51\":0,\"52\":0,\"53\":-100,\"54\":100,\"55\":150,\"56\":-100,\"57\":100,\"58\":0,\"59\":-100,\"60\":0,\"61\":0,\"62\":-100,\"63\":0,\"64\":150,\"65\":-100,\"66\":100,\"67\":150,\"68\":-100,\"69\":0,\"70\":0,\"71\":-100,\"72\":70,\"73\":150,\"74\":-30,\"75\":70,\"76\":0,\"77\":-30,\"78\":30,\"79\":0,\"80\":-30,\"81\":30,\"82\":150,\"83\":-30,\"84\":70,\"85\":150,\"86\":-30,\"87\":30,\"88\":0,\"89\":-30,\"90\":70,\"91\":0,\"92\":-30,\"93\":70,\"94\":150,\"95\":-30,\"96\":70,\"97\":150,\"98\":-70,\"99\":70,\"100\":0,\"101\":-30,\"102\":70,\"103\":150,\"104\":-70,\"105\":70,\"106\":0,\"107\":-70,\"108\":30,\"109\":150,\"110\":-70,\"111\":30,\"112\":150,\"113\":-30,\"114\":30,\"115\":0,\"116\":-30,\"117\":30,\"118\":0,\"119\":-70,\"120\":30,\"121\":150,\"122\":-70,\"123\":30,\"124\":0,\"125\":-30,\"126\":30,\"127\":0,\"128\":-70,\"129\":70,\"130\":0,\"131\":-70,\"132\":70,\"133\":150,\"134\":-70,\"135\":30,\"136\":0,\"137\":-70,\"138\":70,\"139\":150,\"140\":-70,\"141\":30,\"142\":150,\"143\":-70,\"144\":0,\"145\":150,\"146\":0,\"147\":70,\"148\":150,\"149\":0,\"150\":70,\"151\":150,\"152\":-30,\"153\":0,\"154\":150,\"155\":0,\"156\":70,\"157\":150,\"158\":-30,\"159\":0,\"160\":150,\"161\":-30,\"162\":70,\"163\":150,\"164\":0,\"165\":100,\"166\":150,\"167\":0,\"168\":100,\"169\":150,\"170\":-70,\"171\":70,\"172\":150,\"173\":0,\"174\":100,\"175\":150,\"176\":-70,\"177\":70,\"178\":150,\"179\":-70,\"180\":30,\"181\":150,\"182\":-100,\"183\":30,\"184\":150,\"185\":-70,\"186\":100,\"187\":150,\"188\":-70,\"189\":100,\"190\":150,\"191\":-100,\"192\":30,\"193\":150,\"194\":-100,\"195\":100,\"196\":150,\"197\":-70,\"198\":30,\"199\":150,\"200\":-100,\"201\":0,\"202\":150,\"203\":-100,\"204\":0,\"205\":150,\"206\":-30,\"207\":30,\"208\":150,\"209\":-100,\"210\":0,\"211\":150,\"212\":-30,\"213\":30,\"214\":150,\"215\":-30,\"216\":70,\"217\":0,\"218\":-30,\"219\":70,\"220\":0,\"221\":0,\"222\":0,\"223\":0,\"224\":0,\"225\":0,\"226\":0,\"227\":-30,\"228\":70,\"229\":0,\"230\":-30,\"231\":0,\"232\":0,\"233\":0,\"234\":100,\"235\":0,\"236\":-70,\"237\":100,\"238\":0,\"239\":0,\"240\":70,\"241\":0,\"242\":0,\"243\":70,\"244\":0,\"245\":-70,\"246\":100,\"247\":0,\"248\":-70,\"249\":70,\"250\":0,\"251\":0,\"252\":100,\"253\":0,\"254\":-70,\"255\":30,\"256\":0,\"257\":-70,\"258\":30,\"259\":0,\"260\":-100,\"261\":100,\"262\":0,\"263\":-70,\"264\":30,\"265\":0,\"266\":-100,\"267\":100,\"268\":0,\"269\":-100,\"270\":0,\"271\":0,\"272\":-30,\"273\":0,\"274\":0,\"275\":-100,\"276\":30,\"277\":0,\"278\":-100,\"279\":30,\"280\":0,\"281\":-30,\"282\":0,\"283\":0,\"284\":-30,\"285\":30,\"286\":0,\"287\":-100}","vertexColors":"{\"0\":255,\"1\":0,\"2\":0,\"3\":255,\"4\":0,\"5\":0,\"6\":255,\"7\":0,\"8\":0,\"9\":255,\"10\":0,\"11\":0,\"12\":255,\"13\":0,\"14\":0,\"15\":255,\"16\":0,\"17\":0,\"18\":0,\"19\":255,\"20\":0,\"21\":0,\"22\":255,\"23\":0,\"24\":0,\"25\":255,\"26\":0,\"27\":0,\"28\":255,\"29\":0,\"30\":0,\"31\":255,\"32\":0,\"33\":0,\"34\":255,\"35\":0,\"36\":0,\"37\":0,\"38\":255,\"39\":0,\"40\":0,\"41\":255,\"42\":0,\"43\":0,\"44\":255,\"45\":0,\"46\":0,\"47\":255,\"48\":0,\"49\":0,\"50\":255,\"51\":0,\"52\":0,\"53\":255,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0,\"65\":0,\"66\":0,\"67\":0,\"68\":0,\"69\":0,\"70\":0,\"71\":0,\"72\":255,\"73\":0,\"74\":0,\"75\":255,\"76\":0,\"77\":0,\"78\":255,\"79\":0,\"80\":0,\"81\":255,\"82\":0,\"83\":0,\"84\":255,\"85\":0,\"86\":0,\"87\":255,\"88\":0,\"89\":0,\"90\":0,\"91\":255,\"92\":0,\"93\":0,\"94\":255,\"95\":0,\"96\":0,\"97\":255,\"98\":0,\"99\":0,\"100\":255,\"101\":0,\"102\":0,\"103\":255,\"104\":0,\"105\":0,\"106\":255,\"107\":0,\"108\":0,\"109\":0,\"110\":255,\"111\":0,\"112\":0,\"113\":255,\"114\":0,\"115\":0,\"116\":255,\"117\":0,\"118\":0,\"119\":255,\"120\":0,\"121\":0,\"122\":255,\"123\":0,\"124\":0,\"125\":255,\"126\":0,\"127\":0,\"128\":0,\"129\":0,\"130\":0,\"131\":0,\"132\":0,\"133\":0,\"134\":0,\"135\":0,\"136\":0,\"137\":0,\"138\":0,\"139\":0,\"140\":0,\"141\":0,\"142\":0,\"143\":0,\"144\":0,\"145\":255,\"146\":255,\"147\":0,\"148\":255,\"149\":255,\"150\":0,\"151\":255,\"152\":255,\"153\":0,\"154\":255,\"155\":255,\"156\":0,\"157\":255,\"158\":255,\"159\":0,\"160\":255,\"161\":255,\"162\":0,\"163\":255,\"164\":255,\"165\":0,\"166\":255,\"167\":255,\"168\":0,\"169\":255,\"170\":255,\"171\":0,\"172\":255,\"173\":255,\"174\":0,\"175\":255,\"176\":255,\"177\":0,\"178\":255,\"179\":255,\"180\":0,\"181\":255,\"182\":255,\"183\":0,\"184\":255,\"185\":255,\"186\":0,\"187\":255,\"188\":255,\"189\":0,\"190\":255,\"191\":255,\"192\":0,\"193\":255,\"194\":255,\"195\":0,\"196\":255,\"197\":255,\"198\":0,\"199\":255,\"200\":255,\"201\":0,\"202\":255,\"203\":255,\"204\":0,\"205\":255,\"206\":255,\"207\":0,\"208\":255,\"209\":255,\"210\":0,\"211\":255,\"212\":255,\"213\":0,\"214\":255,\"215\":255,\"216\":255,\"217\":0,\"218\":255,\"219\":255,\"220\":0,\"221\":255,\"222\":255,\"223\":0,\"224\":255,\"225\":255,\"226\":0,\"227\":255,\"228\":255,\"229\":0,\"230\":255,\"231\":255,\"232\":0,\"233\":255,\"234\":255,\"235\":0,\"236\":255,\"237\":255,\"238\":0,\"239\":255,\"240\":255,\"241\":0,\"242\":255,\"243\":255,\"244\":0,\"245\":255,\"246\":255,\"247\":0,\"248\":255,\"249\":255,\"250\":0,\"251\":255,\"252\":255,\"253\":0,\"254\":255,\"255\":255,\"256\":0,\"257\":255,\"258\":255,\"259\":0,\"260\":255,\"261\":255,\"262\":0,\"263\":255,\"264\":255,\"265\":0,\"266\":255,\"267\":255,\"268\":0,\"269\":255,\"270\":255,\"271\":0,\"272\":255,\"273\":255,\"274\":0,\"275\":255,\"276\":255,\"277\":0,\"278\":255,\"279\":255,\"280\":0,\"281\":255,\"282\":255,\"283\":0,\"284\":255,\"285\":255,\"286\":0,\"287\":255}"},"material":{"vertexShader":"\n        attribute vec4 position;\n        attribute vec3 normal;\n        attribute vec4 color;\n\n        uniform mat4 u_worldMatrix;\n        uniform mat4 u_viewMatrix;\n        uniform vec4 u_color;\n        uniform bool u_useVertexColors;\n        uniform vec3 u_cameraPosition;\n\n        varying vec4 v_color;\n        varying vec3 v_cameraPosition;\n        varying vec3 v_vertexPosition;\n        varying vec3 v_normal;\n\n        void main() {\n            vec4 wPos = u_viewMatrix * u_worldMatrix * position;\n            gl_Position = wPos;\n            v_cameraPosition = u_cameraPosition;\n            v_vertexPosition = gl_Position.xyz / gl_Position.w;\n            v_normal = mat3(u_worldMatrix) * normal;\n\n            if (u_useVertexColors) {\n              v_color = color;\n            } else {\n              v_color = u_color;\n            }\n        }\n        ","fragmentShader":"\n        precision highp float;\n        uniform vec4 u_lightColor;\n        varying vec4 v_color;\n\n        varying vec3 v_cameraPosition;\n        varying vec3 v_vertexPosition;\n        varying vec3 v_normal;\n        uniform bool u_useEnvironmentMapping;\n        uniform samplerCube u_environmentMap;\n\n        void main() {\n          if (u_useEnvironmentMapping) {\n            vec3 N = normalize(v_normal);\n            vec3 direction = reflect(normalize(v_vertexPosition - v_cameraPosition), N);\n\n            gl_FragColor = textureCube(u_environmentMap, direction);\n          } else {\n            gl_FragColor = v_color * u_lightColor;\n          }\n        }\n        ","uniforms":{"color":["Color",[1,1,1,1]]},"type":"BasicMaterial","name":"Basic","color":[1,1,1,1]}}],"backgroundColor":[1,1,1,1]},"environmentMapping":false,"textureMapping":false,"useNormalMap":true,"useDiffuseMap":true,"useSpecularMap":true,"useDisplacementMap":true,"texture":"brick"}